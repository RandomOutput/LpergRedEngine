package  {	import com.sevenson.geom.sat.*;	import com.sevenson.geom.sat.shapes.Polygon;	import com.sevenson.geom.sat.shapes.Box;	import flash.events.*;	import flash.display.MovieClip;		public class satTesterDoc extends MovieClip{			private var activeEnemies:Array = new Array();	private var activeMeshes:Array = new Array();		public function satTesterDoc() {			spawnEnemy(50,50);			spawnEnemy(200,200);		}				private function spawnEnemy(xLoc:Number, yLoc:Number) {			var newEnemy = new Enemy();			var newMesh = new Box(newEnemy.width, newEnemy.height);						newEnemy.x = xLoc;			newEnemy.y = yLoc;			newMesh.x = xLoc;			newMesh.y = yLoc;						activeEnemies.push(newEnemy);			activeMeshes.push(newMesh);						stage.addChild(newEnemy);						this.addEventListener(Event.ENTER_FRAME, tick);		}				private function tick(e:Event) {			updateEnemies();			updateMeshes();			checkCollision();		}				private function updateEnemies() {			activeEnemies[0].x = stage.mouseX;			activeEnemies[0].y = stage.mouseY;		}				private function updateMeshes() {			for(var i=0;i<activeEnemies.length;i++) {				activeMeshes[i].x = activeEnemies[i].x;				activeMeshes[i].y = activeEnemies[i].y;			}		}				private function checkCollision() {			for(var i=0;i<activeMeshes.length;i++) {				for(var j=0;j<activeMeshes.length;j++) {					if(i!=j) {						if(com.sevenson.geom.sat.Collision.testBoolean(activeMeshes[i], activeMeshes[j])) {							trace("collision");						}											}				}			}		}	}	}